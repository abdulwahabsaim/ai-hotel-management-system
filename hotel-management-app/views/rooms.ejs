<%- include('partials/header') %>

<div class="bg-gray-50 dark:bg-gray-900">
<div class="container mx-auto px-4 py-12">
    <div class="text-center">
        <h1 class="text-4xl font-bold tracking-tight text-gray-900 dark:text-white">Our Rooms</h1>
        <p class="mt-3 max-w-2xl mx-auto text-lg text-gray-600 dark:text-gray-300">Find the perfect room for your stay. For real-time availability, please select your dates.</p>
    </div>

    <!-- Availability & AI Recommender Section -->
    <div class="mt-10 grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Availability Search Bar -->
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Check Availability</h2>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">See which rooms are free for your dates.</p>
            <form action="/rooms" method="GET" id="availabilityForm" class="mt-4">
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div>
                        <label for="checkIn" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Check-in Date</label>
                        <input type="date" class="form-input mt-1 block w-full rounded-md shadow-sm dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:placeholder-gray-400" id="checkIn" name="checkIn" value="<%= query.checkIn || '' %>" required>
                    </div>
                    <div>
                        <label for="checkOut" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Check-out Date</label>
                        <input type="date" class="form-input mt-1 block w-full rounded-md shadow-sm dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:placeholder-gray-400" id="checkOut" name="checkOut" value="<%= query.checkOut || '' %>" required>
                    </div>
                </div>
                <div id="dateError" class="text-red-600 text-sm mt-2" style="display: none;">Check-out date must be after the check-in date.</div>
                <button type="submit" class="mt-4 w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <i class="fa-solid fa-search mr-2 mt-0.5"></i> Search
                </button>
            </form>
        </div>

        <!-- AI Recommender Section -->
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2"><i class="fa-solid fa-wand-magic-sparkles text-yellow-500"></i> AI Room Recommender</h2>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">Not sure what you need? Let our AI help.</p>
            <form id="recommendationForm" class="mt-4">
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div>
                        <label for="guests" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Number of Guests</label>
                        <input type="number" id="guests" class="form-input mt-1 block w-full rounded-md shadow-sm dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:placeholder-gray-400" value="1" min="1" max="10">
                    </div>
                     <div>
                        <label for="trip_type" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Purpose of Trip</label>
                        <select id="trip_type" class="form-select mt-1 block w-full rounded-md shadow-sm dark:bg-gray-700 dark:text-white dark:border-gray-600">
                            <option value="solo">Solo Travel</option>
                            <option value="couple">Couple's Getaway</option>
                            <option value="family">Family Vacation</option>
                            <option value="business">Business Trip</option>
                        </select>
                    </div>
                </div>
                <button type="submit" class="mt-4 w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Recommend a Room</button>
            </form>
            <div id="recommendationResult" class="mt-4" style="display:none;"></div>
        </div>
    </div>

    <!-- NEW: Booking Demand Meter -->
    <div class="mt-8 bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md flex items-center justify-between">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2">
            <i class="fa-solid fa-fire text-orange-500"></i> Current Booking Demand: <span id="demand-level" class="ml-2 font-bold">Loading...</span>
        </h2>
        <div id="demand-reason" class="text-sm text-gray-600 dark:text-gray-400"></div>
    </div>

    <!-- Room Listings Section -->
    <div class="mt-12 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        <% if (rooms.length > 0) { %>
            <% rooms.forEach(room => { %>
                <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden flex flex-col group">
                    <div class="relative">
                        <img src="<%= (room.virtualTourImages && room.virtualTourImages.length > 0) ? room.virtualTourImages[0] : (room.images[0] || '/img/default-room.jpg') %>" class="w-full h-56 object-cover" alt="<%= room.type %> Room thumbnail">
                         <!-- DYNAMIC STATUS BADGE -->
                        <% if (typeof room.isAvailableForDates !== 'undefined') { %>
                            <% if (room.isAvailableForDates) { %><span class="absolute top-3 right-3 bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300 text-xs font-medium px-2.5 py-1 rounded-full">Available</span><% } else { %><span class="absolute top-3 right-3 bg-red-100 text-red-800 dark:bg-red-900/50 dark:text-red-300 text-xs font-medium px-2.5 py-1 rounded-full">Booked</span><% } %>
                        <% } else { %>
                             <span class="absolute top-3 right-3 bg-gray-100 text-gray-800 dark:bg-gray-700/50 dark:text-gray-300 text-xs font-medium px-2.5 py-1 rounded-full">Check Dates</span>
                        <% } %>
                    </div>
                    <div class="p-6 flex flex-col flex-grow">
                        <h3 class="text-xl font-semibold text-gray-900 dark:text-white"><%= room.type %> Room - #<%= room.roomNumber %></h3>
                        <p class="mt-2 text-gray-600 dark:text-gray-300 text-sm flex-grow"><%= room.description.substring(0, 100) %>...</p>

                        <div class="mt-4 flex justify-between items-center">
                            <span class="text-2xl font-bold text-gray-900 dark:text-white">$<%= room.price %><span class="text-sm font-normal text-gray-500 dark:text-gray-400">/night</span></span>
                            <!-- NEW: Scarcity Nudge -->
                            <% if (typeof room.isAvailableForDates !== 'undefined' && room.isAvailableForDates && query.checkIn && query.checkOut) {
                                const roomsLeft = availableRoomsCountByType[room.type];
                                if (roomsLeft > 0 && roomsLeft <= 3) { %>
                                    <span class="text-sm font-semibold text-red-600 dark:text-red-400 flex items-center gap-1">
                                        <i class="fa-solid fa-triangle-exclamation"></i> Only <%= roomsLeft %> left!
                                    </span>
                                <% }
                            } %>
                        </div>

                        <div class="mt-6">
                            <a href="/rooms/<%= room._id %>?checkIn=<%= query.checkIn || '' %>&checkOut=<%= query.checkOut || '' %>" class="w-full text-center py-2 px-4 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                View Details & Book
                            </a>
                        </div>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <div class="lg:col-span-3 text-center bg-white dark:bg-gray-800 p-12 rounded-lg shadow-sm">
                <i class="fa-solid fa-exclamation-circle text-4xl text-yellow-500"></i>
                <p class="mt-4 text-lg text-gray-700 dark:text-gray-300">No rooms found matching your search criteria. Please adjust your dates or try another room type.</p>
                <a href="/rooms" class="inline-block mt-4 px-5 py-2 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700">Clear Search & View All Rooms</a>
            </div>
        <% } %>
    </div>
</div>
</div>

<script>
    // Client-side validation for the date picker form
    document.getElementById('availabilityForm').addEventListener('submit', function(event) {
        const checkIn = new Date(document.getElementById('checkIn').value);
        const checkOut = new Date(document.getElementById('checkOut').value);
        const errorDiv = document.getElementById('dateError');

        if (checkOut <= checkIn) {
            event.preventDefault(); // Stop form submission
            errorDiv.style.display = 'block';
        } else {
            errorDiv.style.display = 'none';
        }
    });

    // AI Recommender Script
    document.getElementById('recommendationForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const guests = document.getElementById('guests').value;
        const trip_type = document.getElementById('trip_type').value;
        const resultDiv = document.getElementById('recommendationResult');
        resultDiv.style.display = 'block';
        resultDiv.innerHTML = `<div class="p-4 bg-yellow-100 text-yellow-800 dark:bg-yellow-900/50 dark:text-yellow-300 rounded-md text-sm">Asking our AI expert...</div>`;
        try {
            const response = await fetch('http://localhost:5000/recommend', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ guests, trip_type }) });
            if (!response.ok) throw new Error('AI service error');
            const result = await response.json();
            resultDiv.innerHTML = `<div class="p-4 bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300 rounded-md text-sm"><strong>Recommendation:</strong> We suggest a <strong>${result.recommended_type}</strong> room. <br><em><small>${result.reason}</small></em></div>`;
        } catch (error) {
            resultDiv.innerHTML = `<div class="p-4 bg-red-100 text-red-800 dark:bg-red-900/50 dark:text-red-300 rounded-md text-sm">Sorry, our AI recommender is currently unavailable.</div>`;
        }
    });

    // NEW: Global Booking Demand Meter Logic
    document.addEventListener('DOMContentLoaded', async () => {
        const demandLevelSpan = document.getElementById('demand-level');
        const demandReasonDiv = document.getElementById('demand-reason');

        try {
            const response = await fetch('/api/demand-level');
            if (!response.ok) throw new Error('Failed to fetch demand level.');
            const data = await response.json();

            demandLevelSpan.textContent = data.level;
            demandReasonDiv.textContent = data.reason;

            // Apply color based on demand level
            demandLevelSpan.classList.remove('text-gray-900', 'dark:text-white', 'text-green-600', 'text-yellow-600', 'text-red-600', 'text-purple-600');
            if (data.level === 'Low') {
                demandLevelSpan.classList.add('text-green-600');
            } else if (data.level === 'Normal') {
                demandLevelSpan.classList.add('text-blue-600'); // Use blue for normal
            } else if (data.level === 'High') {
                demandLevelSpan.classList.add('text-orange-500'); // Changed to orange for High
            } else if (data.level === 'Very High') {
                demandLevelSpan.classList.add('text-red-600'); // Changed to red for Very High
            } else {
                demandLevelSpan.classList.add('text-gray-500'); // For unknown
            }

        } catch (error) {
            console.error('Error fetching demand level:', error);
            demandLevelSpan.textContent = 'Unavailable';
            demandReasonDiv.textContent = 'Could not connect to demand prediction service.';
            demandLevelSpan.classList.remove('text-green-600', 'text-yellow-600', 'text-red-600', 'text-blue-600');
            demandLevelSpan.classList.add('text-gray-500');
        }
    });
</script>

<%- include('partials/footer') %>